{"version":3,"sources":["routes/CreateRoom.js","routes/Room.js","App.js","reportWebVitals.js","index.js"],"names":["CreateRoom","props","id","onClick","uuid","history","push","iceConfiguration","iceServers","urls","Room","socketRef","useRef","connection","videoCamSSTrack","localVideoPlayer","videoStates","None","Camera","ScreenShare","videoState","current","remoteVideoStreams","remoteAudioStreams","refsVidoArray","refsAudioArray","peersConIds","peersConns","rtpVideoSenders","useState","peers","setPeer","isNewUser","setNewUser","startStopLabel","setStartStopLabel","myConnid","setMyconnectionId","userName","setUserName","meetingName","setMeetingName","console","log","useEffect","meetingId","match","params","mId","uId","window","prompt","initialization","meeting_Id","user_Id","io","connect","on","emit","displayName","other_users","forEach","other_user","addNewUser","createNewConnection","connectionId","data","a","exchangeSDP","message","from_connid","connetionId","closeConnection","close","getTracks","track","stop","serverFn","to_connid","peer","userId","user_id","oldValue","connid","RTCPeerConnection","onicecandidate","event","candidate","JSON","stringify","iceCandidate","onicecandidateerror","onicegatheringstatechange","onnegotiationneeded","createOffer","onconnectionstatechange","currentTarget","connectionState","ontrack","MediaStream","kind","getVideoTracks","removeTrack","addTrack","videoEle","find","ele","Object","keys","srcObject","load","getAudioTrack","AddUpdateAudioVideoSenders","offer","setLocalDescription","localDescription","parse","answer","setRemoteDescription","RTCSessionDescription","createAnswer","addIceCandidate","handleStartStopCamera","manageVideo","newVideoStatus","clearCurrentVideoStream","vStream","navigator","mediaDevices","getUserMedia","video","width","height","audio","length","removeAudioVideoSenders","conId","isConnedtionAvailable","rtpSenders","replaceTrack","peerConnection","style","float","overflowY","type","className","autoPlay","muted","controls","ref","map","otherUser","index","clear","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAsBeA,EAnBI,SAACC,GAMlB,OACE,mCACE,qBAAKC,GAAG,aAAR,SACE,yIAEsC,IACpC,wBAAQC,QAXhB,WACE,IAAMD,EAAKE,cACXH,EAAMI,QAAQC,KAAd,gBAA4BJ,KAStB,iC,wDCXJK,G,MAAmB,CACvBC,WAAY,CACV,CAAEC,KAAM,gCACR,CAAEA,KAAM,iCACR,CAAEA,KAAM,iCACR,CAAEA,KAAM,iCACR,CAAEA,KAAM,oCA2aGC,EAvaF,SAACT,GACZ,IAAMU,EAAYC,iBAAO,MACnBC,EAAaD,iBAAO,MACpBE,EAAkBF,iBAAO,MACzBG,EAAmBH,iBAAO,MAE1BI,EAAcJ,iBAAO,CAAEK,KAAM,EAAGC,OAAQ,EAAGC,YAAa,IACxDC,EAAaR,iBAAOI,EAAYK,QAAQJ,MAExCK,EAAqBV,iBAAO,IAC5BW,EAAqBX,iBAAO,IAC5BY,EAAgBZ,iBAAO,IACvBa,EAAiBb,iBAAO,IACxBc,EAAcd,iBAAO,IACrBe,EAAaf,iBAAO,IACpBgB,EAAkBhB,iBAAO,IAE/B,EAAyBiB,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAsCV,mBAAS,IAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KAEAC,QAAQC,IAAI,QAASb,GAErBc,qBAAU,WACR,IAAIC,EAAY5C,EAAM6C,MAAMC,OAAOC,IAC/BC,EAAMhD,EAAM6C,MAAMC,OAAOE,IACxBJ,GACH5C,EAAMI,QAAQC,KAAK,KAEhB2C,IACHA,EAAMC,OAAOC,OAAO,qBAElBlD,EAAMI,QAAQC,KAAK,KAGvBmC,EAAeI,GACfN,EAAYU,GACZG,EAAeP,EAAWI,KACzB,IAEH,IAAMG,EAAiB,SAACC,EAAYC,GAClC3C,EAAUU,QAAUkC,IAAGC,QAAQ,yBAC/B7C,EAAUU,QAAQoC,GAAG,WAAW,WAC1B9C,EAAUU,QAAQmC,UACpBnB,EAAkB1B,EAAUU,QAAQnB,IAEpB,KAAZoD,GAAiC,KAAfD,GACpB1C,EAAUU,QAAQqC,KAAK,cAAe,CACpCC,YAAaL,EACbT,UAAWQ,QAMnB1C,EAAUU,QAAQoC,GAAG,iBAAiB,SAACG,GAEjCA,IACS,OAAXA,QAAW,IAAXA,KAAaC,SAAQ,SAACC,GACpBC,EAAWD,GACXE,EAAoBF,EAAWG,kBAGnChC,GAAW,MAGbtB,EAAUU,QAAQoC,GAAG,cAArB,uCAAoC,WAAgBS,GAAhB,SAAAC,EAAA,sEAC5BC,EAAYF,EAAKG,QAASH,EAAKI,aADH,2CAApC,uDAIA3D,EAAUU,QAAQoC,GAAG,4BAA4B,SAAUS,GAEzDH,EAAWG,GACXF,EAAoBE,EAAKD,iBAG3BtD,EAAUU,QAAQoC,GAAG,2BAArB,uCAAiD,WAAOc,GAAP,SAAAJ,EAAA,sEACzCK,EAAgBD,GADyB,2CAAjD,wDAKIC,EAAkB,SAACP,GACvBvC,EAAYL,QAAQ4C,GAAgB,KAChCtC,EAAWN,QAAQ4C,KACrBtC,EAAWN,QAAQ4C,GAAcQ,QACjC9C,EAAWN,QAAQ4C,GAAgB,MAGjC1C,EAAmBF,QAAQ4C,KAC7B1C,EAAmBF,QAAQ4C,GAAcS,YAAYb,SAAQ,SAACc,GACxDA,EAAMC,MAAMD,EAAMC,UAExBrD,EAAmBF,QAAQ4C,GAAgB,MAGzC3C,EAAmBD,QAAQ4C,KAC7B3C,EAAmBD,QAAQ4C,GAAcS,YAAYb,SAAQ,SAACc,GACxDA,EAAMC,MAAMD,EAAMC,UAExBtD,EAAmBD,QAAQ4C,GAAgB,OAIzCY,EAAW,SAACX,EAAMY,GACtBnE,EAAUU,QAAQqC,KAAK,cAAe,CACpCW,QAASH,EACTY,UAAWA,KAMTf,EAAa,SAACG,GAClB,IAAIa,EAAO,CACTC,OAAQd,EAAKe,QACbhB,aAAcC,EAAKD,cAErBlC,GAAQ,SAACmD,GAAD,4BAAkBA,GAAlB,CAA4BH,QAGhCf,EAAsB,SAACmB,GAgF3B,OA/EAtE,EAAWQ,QAAU,IAAI+D,kBAAkB7E,GAE3CM,EAAWQ,QAAQgE,eAAiB,SAAUC,GACxCA,EAAMC,WACRV,EAASW,KAAKC,UAAU,CAAEC,aAAcJ,EAAMC,YAAcJ,IAIhEtE,EAAWQ,QAAQsE,oBAAsB,SAAUL,GACjD5C,QAAQC,IAAI,sBAAuB2C,IAErCzE,EAAWQ,QAAQuE,0BAA4B,SAAUN,GACvD5C,QAAQC,IAAI,4BAA6B2C,IAE3CzE,EAAWQ,QAAQwE,oBAAnB,uCAAyC,WAAgBP,GAAhB,SAAAnB,EAAA,6DACvCzB,QAAQC,IAAI,sBAAuB2C,GADI,SAEjCQ,EAAYX,GAFqB,2CAAzC,sDAIAtE,EAAWQ,QAAQ0E,wBAA0B,SAAUT,GACT,cAAxCA,EAAMU,cAAcC,iBACtBvD,QAAQC,IAAI,aAE8B,iBAAxC2C,EAAMU,cAAcC,iBACtBvD,QAAQC,IAAI,iBAIhB9B,EAAWQ,QAAQ6E,QAAU,SAAUZ,GASrC,GAPK/D,EAAmBF,QAAQ8D,KAC9B5D,EAAmBF,QAAQ8D,GAAU,IAAIgB,aAEtC7E,EAAmBD,QAAQ8D,KAC9B7D,EAAmBD,QAAQ8D,GAAU,IAAIgB,aAGlB,UAArBb,EAAMX,MAAMyB,KAAkB,CAAC,IAAD,EAChC9E,EAAmBD,QAAQ8D,GACxBkB,iBACAxC,SAAQ,SAACc,GAAD,OACPrD,EAAmBD,QAAQ8D,GAAQmB,YAAY3B,MAEnDrD,EAAmBD,QAAQ8D,GAAQoB,SAASjB,EAAMX,OAElD,IAAI6B,EAAQ,OAAGhF,QAAH,IAAGA,GAAH,UAAGA,EAAeH,eAAlB,aAAG,EAAwBoF,MACrC,SAACC,GAAD,OAASC,OAAOC,KAAKF,GAAK,IAAMvB,KAElCqB,EAASrB,GAAQ0B,UAAY,KAC7BL,EAASrB,GAAQ0B,UAAYvF,EAAmBD,QAAQ8D,GACxDqB,EAASrB,GAAQ2B,OAGnB,GAAyB,UAArBxB,EAAMX,MAAMyB,KAAkB,CAChC7E,EAAmB4D,GAChB4B,gBACAlD,SAAQ,SAACc,GAAD,OAAWpD,EAAmB4D,GAAQmB,YAAY3B,MAC7DpD,EAAmBgF,SAASjB,EAAMX,OAClC,IAAI6B,EAAW/E,EAAegF,MAAK,SAACC,GAAD,OAASA,EAAIvB,IAAWA,KAC3DqB,EAASK,UAAY,KACrBL,EAASK,UAAYtF,EAAmB4D,GACxCqB,EAASM,SAIbpF,EAAYL,QAAQ8D,GAAUA,EAC9BxD,EAAWN,QAAQ8D,GAAUtE,EAAWQ,QAGtCD,EAAWC,SAAWL,EAAYK,QAAQH,QAC1CE,EAAWC,SAAWL,EAAYK,QAAQF,aAEtCL,EAAgBO,SAClB2F,GACElG,EAAgBO,QAChBO,EAAgBP,SAKfR,GAGHiF,EAAW,uCAAG,WAAOX,GAAP,iBAAAhB,EAAA,6DAEdtD,EAAac,EAAWN,QAAQ8D,GAFlB,SAGAtE,EAAWiF,cAHX,cAGdmB,EAHc,gBAIZpG,EAAWqG,oBAAoBD,GAJnB,OAKlBpC,EAASW,KAAKC,UAAU,CAAEwB,MAAOpG,EAAWsG,mBAAqBhC,GAL/C,2CAAH,sDAQXf,EAAW,uCAAG,WAAOC,EAASC,GAAhB,eAAAH,EAAA,2DAElBE,EAAUmB,KAAK4B,MAAM/C,IACTgD,OAHM,gCAIV1F,EAAWN,QAAQiD,GAAagD,qBACpC,IAAIC,sBAAsBlD,EAAQgD,SALpB,kCAOPhD,EAAQ4C,MAPD,oBAQXtF,EAAWN,QAAQiD,GARR,kCASRN,EAAoBM,GATZ,yBAYV3C,EAAWN,QAAQiD,GAAagD,qBACpC,IAAIC,sBAAsBlD,EAAQ4C,QAbpB,yBAeGtF,EAAWN,QAAQiD,GAAakD,eAfnC,eAeZH,EAfY,iBAgBV1F,EAAWN,QAAQiD,GAAa4C,oBAAoBG,GAhB1C,QAiBhBxC,EACEW,KAAKC,UAAU,CAAE4B,OAAQA,IACzB/C,EACAlC,EAASf,SApBK,4BAsBPgD,EAAQqB,aAtBD,oBAuBhBhD,QAAQC,IAAI,eAAgB0B,EAAQqB,cAC/B/D,EAAWN,QAAQiD,GAxBR,kCAyBRN,EAAoBM,GAzBZ,mCA6BR3C,EAAWN,QAAQiD,GAAamD,gBACpCpD,EAAQqB,cA9BI,2DAiCdhD,QAAQC,IAAR,MAjCc,2DAAH,wDAsCX+E,GAAqB,uCAAG,sBAAAvD,EAAA,yDAC5BhC,GAAmBD,GACfd,EAAWC,SAAWL,EAAYK,QAAQH,OAFlB,gCAGpByG,GAAY3G,EAAYK,QAAQJ,MAHZ,6CAKpB0G,GAAY3G,EAAYK,QAAQH,QALZ,2CAAH,qDASrByG,GAAW,uCAAG,WAAOC,GAAP,eAAAzD,EAAA,yDACdyD,IAAmB5G,EAAYK,QAAQJ,KADzB,uBAEhBG,EAAWC,QAAUL,EAAYK,QAAQJ,KACzC4G,GAAwBjG,EAAgBP,SAHxB,sCAQZyG,EAAU,KACVF,IAAmB5G,EAAYK,QAAQH,OAT3B,iCAUE6G,UAAUC,aAAaC,aAAa,CAClDC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,KAC7BC,OAAO,IAZK,OAUdP,EAVc,eAgBhBD,GAAwBjG,EAAgBP,SACxCD,EAAWC,QAAUuG,EACjBE,GAAWA,EAAQzB,iBAAiBiC,OAAS,IAC/CxH,EAAgBO,QAAUyG,EAAQzB,iBAAiB,GAC/CvF,EAAgBO,UAClBN,EAAiBM,QAAQwF,UAAY,IAAIV,YAAY,CACnDrF,EAAgBO,UAElB2F,GACElG,EAAgBO,QAChBO,EAAgBP,WA1BN,4GAAH,sDAiCXwG,GAA0B,SAACjG,GAC3Bd,EAAgBO,UAClBP,EAAgBO,QAAQuD,OACxB9D,EAAgBO,QAAU,KAC1BN,EAAiBM,QAAQwF,UAAY,KACrC0B,GAAwB3G,KAItB2G,GAA0B,SAAC3G,GAC/B,IAAK,IAAI4G,KAAS9G,EAAYL,QAE1BO,EAAgB4G,IAChBC,GAAsB9G,EAAWN,QAAQmH,MAEzC7G,EAAWN,QAAQmH,GAAOlC,YAAY1E,EAAgB4G,IACtD5G,EAAgB4G,GAAS,OAKzBxB,GAA0B,uCAAG,WAAOrC,EAAO+D,GAAd,eAAAvE,EAAA,sDACjC,IAASqE,KAAS9G,EAAYL,QACxBoH,GAAsB9G,EAAWN,QAAQmH,MACvCE,EAAWF,IAAUE,EAAWF,GAAO7D,MACzC+D,EAAWF,GAAOG,aAAahE,GAE/B+D,EAAWF,GAAS7G,EAAWN,QAAQmH,GAAOjC,SAAS5B,IAN5B,2CAAH,wDAY1B8D,GAAwB,SAACG,GAC7B,SACGA,GAAqD,QAAnCA,EAAe3C,iBACA,cAAlC2C,EAAe3C,iBACmB,aAAlC2C,EAAe3C,kBAMnB,OACE,mCACE,sBAAK/F,GAAG,mBAAR,UACE,oBAAIA,GAAG,cAAP,SAAsBsC,IACtB,gCACGR,EACC,qBACE6G,MAAO,CACLV,MAAO,QACPC,OAAQ,QACRU,MAAO,OACPC,UAAW,UAEb7I,GAAG,WAPL,SASE,gCACE,uBAAO8I,KAAK,OAAO9I,GAAG,WACtB,wBAAQA,GAAG,UAAX,uBAGF,KAEH8B,EAEC,sBAAK9B,GAAG,WAAR,UACE,sBAAKA,GAAG,KAAK+I,UAAU,UAAvB,UACE,6BAAK3G,IACL,8BACE,uBAAO4G,UAAQ,EAACC,OAAK,EAACC,UAAQ,EAACC,IAAKtI,UAIlC,OAALe,QAAK,IAALA,OAAA,EAAAA,EAAOwG,QAAS,GACfxG,EAAMwH,KAAI,SAACC,EAAWC,GACpB,OACE,sBAAKP,UAAU,UAAf,UACE,6BAAKM,EAAUvE,SACf,gCACE,uBACEqE,IAAK,SAACA,GACJ7H,EAAcH,QAAQf,KAAtB,eACGiJ,EAAUtF,aAAeoF,KAG9BH,UAAQ,EACRE,UAAQ,EACRD,OAAK,EACLjJ,GAAG,sBAGL,uBACEmJ,IAAK,SAACA,GACJ5H,EAAeJ,QAAQf,KAAvB,eACGiJ,EAAUtF,aAAeoF,KAG9BH,UAAQ,EACRE,UAAQ,EACRlJ,GAAG,2BAvBqBqJ,EAAUtF,oBA8B9C,QAGN,qBAAK4E,MAAO,CAAEY,MAAO,UAEpBzH,EACC,sBAAKiH,UAAU,UAAf,UACE,yBAAQ9I,QAASuH,GAAuBxH,GAAG,kBAA3C,UACG,IACAgC,EAAiB,cAAgB,eAAgB,OAEpD,wBAAQhC,GAAG,gBAAX,oBACA,wBAAQA,GAAG,0BAAX,0BACA,wBAAQA,GAAG,kBAAX,8BAEA,WC/ZGwJ,MAXf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW7J,IACjC,cAAC,IAAD,CAAO2J,KAAK,oBAAoBE,UAAWnJ,UCEpCoJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.805c18b0.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { v1 as uuid } from \"uuid\";\n\nconst CreateRoom = (props) => {\n  function create() {\n    const id = uuid();\n    props.history.push(`/room/${id}`);\n  }\n\n  return (\n    <>\n      <div id=\"meetingbox\">\n        <p>\n          It seems you are not trying to join any meeting! You may start a new\n          meeting. Here is generated for you.{\" \"}\n          <button onClick={create}>Create room</button>\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default CreateRoom;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./room.css\";\n\nconst iceConfiguration = {\n  iceServers: [\n    { urls: \"stun:stun.l.google.com:19302\" },\n    { urls: \"stun:stun1.l.google.com:19302\" },\n    { urls: \"stun:stun2.l.google.com:19302\" },\n    { urls: \"stun:stun3.l.google.com:19302\" },\n    { urls: \"stun:stun4.l.google.com:19302\" },\n  ],\n};\n\nconst Room = (props) => {\n  const socketRef = useRef(null);\n  const connection = useRef(null);\n  const videoCamSSTrack = useRef(null);\n  const localVideoPlayer = useRef(null);\n\n  const videoStates = useRef({ None: 0, Camera: 1, ScreenShare: 2 });\n  const videoState = useRef(videoStates.current.None);\n\n  const remoteVideoStreams = useRef([]);\n  const remoteAudioStreams = useRef([]);\n  const refsVidoArray = useRef([]);\n  const refsAudioArray = useRef([]);\n  const peersConIds = useRef([]);\n  const peersConns = useRef([]);\n  const rtpVideoSenders = useRef([]);\n\n  const [peers, setPeer] = useState([]);\n  const [isNewUser, setNewUser] = useState(false);\n  const [startStopLabel, setStartStopLabel] = useState(false);\n  const [myConnid, setMyconnectionId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [meetingName, setMeetingName] = useState(\"\");\n\n  console.log(\"peers\", peers);\n\n  useEffect(() => {\n    let meetingId = props.match.params.mId;\n    let uId = props.match.params.uId;\n    if (!meetingId) {\n      props.history.push(\"/\");\n    }\n    if (!uId) {\n      uId = window.prompt(\"Enter your nick\");\n      if (!uId) {\n        props.history.push(\"/\");\n      }\n    }\n    setMeetingName(meetingId);\n    setUserName(uId);\n    initialization(meetingId, uId);\n  }, []);\n\n  const initialization = (meeting_Id, user_Id) => {\n    socketRef.current = io.connect(\"http://10.0.0.37:3001\");\n    socketRef.current.on(\"connect\", () => {\n      if (socketRef.current.connect) {\n        setMyconnectionId(socketRef.current.id);\n        // wrtcInitilization(socketRef.current.id);\n        if (user_Id !== \"\" && meeting_Id !== \"\") {\n          socketRef.current.emit(\"userConnect\", {\n            displayName: user_Id,\n            meetingId: meeting_Id,\n          });\n        }\n      }\n    });\n\n    socketRef.current.on(\"userconnected\", (other_users) => {\n      debugger;\n      if (other_users) {\n        other_users?.forEach((other_user) => {\n          addNewUser(other_user);\n          createNewConnection(other_user.connectionId);\n        });\n      }\n      setNewUser(true);\n    });\n\n    socketRef.current.on(\"exchangeSDP\", async function (data) {\n      await exchangeSDP(data.message, data.from_connid);\n    });\n\n    socketRef.current.on(\"informAboutNewConnection\", function (data) {\n      debugger;\n      addNewUser(data);\n      createNewConnection(data.connectionId);\n    });\n\n    socketRef.current.on(\"informAboutConnectionEnd\", async (connetionId) => {\n      await closeConnection(connetionId);\n    });\n  };\n\n  const closeConnection = (connectionId) => {\n    peersConIds.current[connectionId] = null;\n    if (peersConns.current[connectionId]) {\n      peersConns.current[connectionId].close();\n      peersConns.current[connectionId] = null;\n    }\n\n    if (remoteAudioStreams.current[connectionId]) {\n      remoteAudioStreams.current[connectionId].getTracks().forEach((track) => {\n        if (track.stop) track.stop();\n      });\n      remoteAudioStreams.current[connectionId] = null;\n    }\n\n    if (remoteVideoStreams.current[connectionId]) {\n      remoteVideoStreams.current[connectionId].getTracks().forEach((track) => {\n        if (track.stop) track.stop();\n      });\n      remoteVideoStreams.current[connectionId] = null;\n    }\n  };\n\n  const serverFn = (data, to_connid) => {\n    socketRef.current.emit(\"exchangeSDP\", {\n      message: data,\n      to_connid: to_connid,\n    });\n  };\n\n  // const wrtcInitilization = (socket_Id) => {};\n\n  const addNewUser = (data) => {\n    let peer = {\n      userId: data.user_id,\n      connectionId: data.connectionId,\n    };\n    setPeer((oldValue) => [...oldValue, peer]);\n  };\n\n  const createNewConnection = (connid) => {\n    connection.current = new RTCPeerConnection(iceConfiguration);\n\n    connection.current.onicecandidate = function (event) {\n      if (event.candidate) {\n        serverFn(JSON.stringify({ iceCandidate: event.candidate }), connid);\n      }\n    };\n\n    connection.current.onicecandidateerror = function (event) {\n      console.log(\"onicecandidateerror\", event);\n    };\n    connection.current.onicegatheringstatechange = function (event) {\n      console.log(\"onicegatheringstatechange\", event);\n    };\n    connection.current.onnegotiationneeded = async function (event) {\n      console.log(\"onnegotiationneeded\", event);\n      await createOffer(connid);\n    };\n    connection.current.onconnectionstatechange = function (event) {\n      if (event.currentTarget.connectionState === \"connected\") {\n        console.log(\"connected\");\n      }\n      if (event.currentTarget.connectionState === \"disconnected\") {\n        console.log(\"disconnected\");\n      }\n    };\n\n    connection.current.ontrack = function (event) {\n      debugger;\n      if (!remoteAudioStreams.current[connid]) {\n        remoteAudioStreams.current[connid] = new MediaStream();\n      }\n      if (!remoteVideoStreams.current[connid]) {\n        remoteVideoStreams.current[connid] = new MediaStream();\n      }\n\n      if (event.track.kind === \"video\") {\n        remoteVideoStreams.current[connid]\n          .getVideoTracks()\n          .forEach((track) =>\n            remoteVideoStreams.current[connid].removeTrack(track)\n          );\n        remoteVideoStreams.current[connid].addTrack(event.track);\n\n        let videoEle = refsVidoArray?.current?.find(\n          (ele) => Object.keys(ele)[0] == connid\n        );\n        videoEle[connid].srcObject = null;\n        videoEle[connid].srcObject = remoteVideoStreams.current[connid];\n        videoEle[connid].load();\n      }\n\n      if (event.track.kind === \"audio\") {\n        remoteAudioStreams[connid]\n          .getAudioTrack()\n          .forEach((track) => remoteAudioStreams[connid].removeTrack(track));\n        remoteAudioStreams.addTrack(event.track);\n        let videoEle = refsAudioArray.find((ele) => ele[connid] == connid);\n        videoEle.srcObject = null;\n        videoEle.srcObject = remoteAudioStreams[connid];\n        videoEle.load();\n      }\n    };\n\n    peersConIds.current[connid] = connid;\n    peersConns.current[connid] = connection.current;\n\n    if (\n      videoState.current == videoStates.current.Camera ||\n      videoState.current == videoStates.current.ScreenShare\n    ) {\n      if (videoCamSSTrack.current) {\n        AddUpdateAudioVideoSenders(\n          videoCamSSTrack.current,\n          rtpVideoSenders.current\n        );\n      }\n    }\n\n    return connection;\n  };\n\n  const createOffer = async (connid) => {\n    debugger;\n    let connection = peersConns.current[connid];\n    let offer = await connection.createOffer();\n    await connection.setLocalDescription(offer);\n    serverFn(JSON.stringify({ offer: connection.localDescription }), connid);\n  };\n\n  const exchangeSDP = async (message, from_connid) => {\n    debugger;\n    message = JSON.parse(message);\n    if (message.answer) {\n      await peersConns.current[from_connid].setRemoteDescription(\n        new RTCSessionDescription(message.answer)\n      );\n    } else if (message.offer) {\n      if (!peersConns.current[from_connid]) {\n        await createNewConnection(from_connid);\n      }\n\n      await peersConns.current[from_connid].setRemoteDescription(\n        new RTCSessionDescription(message.offer)\n      );\n      var answer = await peersConns.current[from_connid].createAnswer();\n      await peersConns.current[from_connid].setLocalDescription(answer);\n      serverFn(\n        JSON.stringify({ answer: answer }),\n        from_connid,\n        myConnid.current\n      );\n    } else if (message.iceCandidate) {\n      console.log(\"iceCandidate\", message.iceCandidate);\n      if (!peersConns.current[from_connid]) {\n        await createNewConnection(from_connid);\n      }\n\n      try {\n        await peersConns.current[from_connid].addIceCandidate(\n          message.iceCandidate\n        );\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const handleStartStopCamera = async () => {\n    setStartStopLabel(!startStopLabel);\n    if (videoState.current == videoStates.current.Camera) {\n      await manageVideo(videoStates.current.None);\n    } else {\n      await manageVideo(videoStates.current.Camera);\n    }\n  };\n\n  const manageVideo = async (newVideoStatus) => {\n    if (newVideoStatus === videoStates.current.None) {\n      videoState.current = videoStates.current.None;\n      clearCurrentVideoStream(rtpVideoSenders.current);\n      return;\n    }\n\n    try {\n      var vStream = null;\n      if (newVideoStatus === videoStates.current.Camera) {\n        vStream = await navigator.mediaDevices.getUserMedia({\n          video: { width: 720, height: 480 },\n          audio: false,\n        });\n      }\n\n      clearCurrentVideoStream(rtpVideoSenders.current);\n      videoState.current = newVideoStatus;\n      if (vStream && vStream.getVideoTracks().length > 0) {\n        videoCamSSTrack.current = vStream.getVideoTracks()[0];\n        if (videoCamSSTrack.current) {\n          localVideoPlayer.current.srcObject = new MediaStream([\n            videoCamSSTrack.current,\n          ]);\n          AddUpdateAudioVideoSenders(\n            videoCamSSTrack.current,\n            rtpVideoSenders.current\n          );\n        }\n      }\n    } catch (error) {}\n  };\n\n  const clearCurrentVideoStream = (rtpVideoSenders) => {\n    if (videoCamSSTrack.current) {\n      videoCamSSTrack.current.stop();\n      videoCamSSTrack.current = null;\n      localVideoPlayer.current.srcObject = null;\n      removeAudioVideoSenders(rtpVideoSenders);\n    }\n  };\n\n  const removeAudioVideoSenders = (rtpVideoSenders) => {\n    for (var conId in peersConIds.current) {\n      if (\n        rtpVideoSenders[conId] &&\n        isConnedtionAvailable(peersConns.current[conId])\n      ) {\n        peersConns.current[conId].removeTrack(rtpVideoSenders[conId]);\n        rtpVideoSenders[conId] = null;\n      }\n    }\n  };\n\n  const AddUpdateAudioVideoSenders = async (track, rtpSenders) => {\n    for (var conId in peersConIds.current) {\n      if (isConnedtionAvailable(peersConns.current[conId])) {\n        if (rtpSenders[conId] && rtpSenders[conId].track) {\n          rtpSenders[conId].replaceTrack(track);\n        } else {\n          rtpSenders[conId] = peersConns.current[conId].addTrack(track);\n        }\n      }\n    }\n  };\n\n  const isConnedtionAvailable = (peerConnection) => {\n    if (\n      (peerConnection && peerConnection.connectionState === \"new\") ||\n      peerConnection.connectionState == \"connecting\" ||\n      peerConnection.connectionState == \"connected\"\n    ) {\n      return true;\n    } else return false;\n  };\n\n  return (\n    <>\n      <div id=\"meetingContainer\">\n        <h1 id=\"meetingname\">{meetingName}</h1>\n        <div>\n          {isNewUser ? (\n            <div\n              style={{\n                width: \"200px\",\n                height: \"300px\",\n                float: \"left\",\n                overflowY: \"scroll\",\n              }}\n              id=\"messages\"\n            >\n              <div>\n                <input type=\"text\" id=\"msgbox\" />\n                <button id=\"btnsend\">Send</button>\n              </div>\n            </div>\n          ) : null}\n\n          {isNewUser ? (\n            // {true ? (\n            <div id=\"divUsers\">\n              <div id=\"me\" className=\"userbox\">\n                <h2>{userName}</h2>\n                <div>\n                  <video autoPlay muted controls ref={localVideoPlayer} />\n                </div>\n              </div>\n\n              {peers?.length > 0 &&\n                peers.map((otherUser, index) => {\n                  return (\n                    <div className=\"userbox\" key={otherUser.connectionId}>\n                      <h2>{otherUser.userId}</h2>\n                      <div>\n                        <video\n                          ref={(ref) => {\n                            refsVidoArray.current.push({\n                              [otherUser.connectionId]: ref,\n                            });\n                          }}\n                          autoPlay\n                          controls\n                          muted\n                          id=\"remoteVideoCtr111\"\n                        ></video>\n\n                        <audio\n                          ref={(ref) => {\n                            refsAudioArray.current.push({\n                              [otherUser.connectionId]: ref,\n                            });\n                          }}\n                          autoPlay\n                          controls\n                          id=\"remoteAudioCtr111\"\n                        ></audio>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          ) : null}\n        </div>\n\n        <div style={{ clear: \"both\" }}></div>\n\n        {isNewUser ? (\n          <div className=\"toolbox\">\n            <button onClick={handleStartStopCamera} id=\"btnStartStopCam\">\n              {\" \"}\n              {startStopLabel ? \"Stop Camera\" : \"Start Camera\"}{\" \"}\n            </button>\n            <button id=\"btnMuteUnmute\">UnMute</button>\n            <button id=\"btnStartStopScreenshare\">Screen Share</button>\n            <button id=\"btnResetMeeting\">Reset Meeting</button>\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CreateRoom from \"./routes/CreateRoom\";\nimport Room from \"./routes/Room\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={CreateRoom} />\n        <Route path=\"/room/:mId?/:uId?\" component={Room} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}